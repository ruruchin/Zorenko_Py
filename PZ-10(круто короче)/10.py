# Коллекции книг в магазинах
magistr = {'Лермонтов', 'Достоевский', 'Пушкин', 'Тютчев'}
domknigi = {'Толстой', 'Грибоедов', 'Чехов', 'Пушкин'}
bookmarket = {'Пушкин', 'Достоевский', 'Маяковский'}
gallery = {'Чехов', 'Тютчев', 'Пушкин'}

# 1.
# тут конкретно я не совсем уверен в том как она хочет чтобы мы работали со словарями, да и вообще она сама показывала способ создания легче(насколько я помню).
# Способ 2 будет ниже

authors={'Пушкин', 'Достоевский'}

Slovar_bad = {
    'magistr': {'Лермонтов', 'Достоевский', 'Пушкин', 'Тютчев'},
    'domknigi': {'Толстой', 'Грибоедов', 'Чехов', 'Пушкин'},
    'bookmarket': {'Пушкин', 'Достоевский', 'Маяковский'},
    'gallery': {'Чехов', 'Тютчев', 'Пушкин'}
}
'''Этот словарь ты можешь убрать если нравится второе решение'''

# ну тут чисто можно выпендриться и засунуть это все дело в генератор списка, а уже потом преобразовать его в словарь через dict

# '''точно не знаю, будет респект за такое или нет'''
# '''она вроде за такое поясняла'''

Slovar_good =[('magistr', magistr), ('domknigi', domknigi), ('bookmarket', bookmarket), ('gallery', gallery)]
# ну тут просто генератор который разделяет все на пары ключ:'значение', где значение это собственно сам словарь бывший, короче круто, если что-то не понятно скажешь

magazini = dict(Slovar_good)

#Можно использовать просто value вместо book потому что по кайфу, а можно и book. ТО ЖЕ САМОЕ КАСАЕТСЯ name.
in_for ={''}
for name, book in magazini.items():
    if authors.issubset(book):
        in_for.add(name)
in_for.pop()
# Ну тут всё по знакомо, ака Артем это делал, вроде должна помнить. (Именно про метод .pop())
print(f"1. Книги Достоевского и Пушкина есть в {in_for}")


"""НО ЕСЛИ ОНА СКАЖЕТ ЧТО ЭТО КОСТЫЛЬ Я БУДУ РАССТРОЕН!!"""
"""В ОТВЕТ НА ЭТО СКАЖИ ЧТО ЭТО ВСЕЖЕ ЛУЧШЕ ВЫГЛЯДЕТ ЧЕМ:
in_for = dict()
"""

# 2. Добавляем автора Лермонтов в ассортимент магазина ДомКниги
domknigi.add('Лермонтов')
print("2. Обновленный ассортимент магазина 'ДомКниги':", domknigi)

# 3. Находим отсутствующие книги из БукМаркет(а) в Магистр(е)
not_books = bookmarket - magistr
print("3. Книги из 'БукМаркета' отсутствуют в магазине 'Магистр':", not_books)