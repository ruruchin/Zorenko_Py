"""
Lambda Функция эквивалентна трелочной функции в js т.е. ->{}

map() -> Преобразует аргументы последовательности с каждым иттерируемм объектом

Пример:
"""
lst = [1,2,3,4,20]
print(list(map(lambda x: x**2, lst)))
"""Filter()"""
"""
filter() -> фильтрует аргументы по критерию.
В нашем слушае аргумент это lambda функция
Пример:
"""
print(list(filter(lambda x: x%2==0 , lst)))

"""reduse()"""
"""
reduse() -> функция +список.
Для использования необходимо импортировать Functools
"""
from functools import reduce
print(reduce(lambda x,y:x-y,lst))
# Выведет последнюю иттерацию



"""    СПИСКОВОЕ ВКЛЮЧЕНИЕ     """
"""     LIST COMPLICATION       """
# Делал ещё до того как это стало мейнстримом

"""
Теперь чтобы делть фейм со строками надо просто -> from string import ascii_letters (это типо понять англ буквы или нет и тд)
Но вот теперь моно делать и словари, только надо указать [y: тут циклы и др ]
"""